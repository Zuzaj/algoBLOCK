function (TOK_FUNC)
PARTITION (TOK_VAR)
( (TOK_ARG_L)
A (TOK_VAR)
, (TOK_COM)
left (TOK_VAR)
, (TOK_COM)
right (TOK_VAR)
) (TOK_ARG_R)
* (TOK_EL)
low (TOK_VAR)
= (TOK_ASSIGN)
left (TOK_VAR)
* (TOK_EL)
high (TOK_VAR)
= (TOK_ASSIGN)
right (TOK_VAR)
* (TOK_EL)
pivot (TOK_VAR)
= (TOK_ASSIGN)
A (TOK_VAR)
[ (TOK_TAB_L)
FLOOR (TOK_VAR)
( (TOK_ARG_L)
left (TOK_VAR)
/ (TOK_DIV)
2 (TOK_NUM)
+ (TOK_PLUS)
right (TOK_VAR)
/ (TOK_DIV)
2 (TOK_NUM)
) (TOK_ARG_R)
] (TOK_TAB_R)
* (TOK_EL)
while (TOK_WHILE)
low (TOK_VAR)
<= (TOK_SMALLER_EQ)
high (TOK_VAR)
do (TOK_DO)
-> (TOK_ARROW_L)
* (TOK_EL)
while (TOK_WHILE)
A (TOK_VAR)
[ (TOK_TAB_L)
low (TOK_VAR)
] (TOK_TAB_R)
< (TOK_SMALLER)
pivot (TOK_VAR)
do (TOK_DO)
-> (TOK_ARROW_L)
* (TOK_EL)
low (TOK_VAR)
= (TOK_ASSIGN)
low (TOK_VAR)
+ (TOK_PLUS)
1 (TOK_NUM)
>- (TOK_ARROW_R)
* (TOK_EL)
while (TOK_WHILE)
A (TOK_VAR)
[ (TOK_TAB_L)
high (TOK_VAR)
] (TOK_TAB_R)
> (TOK_GREATER)
pivot (TOK_VAR)
do (TOK_DO)
-> (TOK_ARROW_L)
* (TOK_EL)
high (TOK_VAR)
= (TOK_ASSIGN)
high (TOK_VAR)
- (TOK_MINUS)
1 (TOK_NUM)
>- (TOK_ARROW_R)
* (TOK_EL)
if (TOK_IF)
low (TOK_VAR)
<= (TOK_SMALLER_EQ)
high (TOK_VAR)
then (TOK_THEN)
-> (TOK_ARROW_L)
* (TOK_EL)
SWAP (TOK_VAR)
( (TOK_ARG_L)
A (TOK_VAR)
[ (TOK_TAB_L)
low (TOK_VAR)
] (TOK_TAB_R)
, (TOK_COM)
A (TOK_VAR)
[ (TOK_TAB_L)
high (TOK_VAR)
] (TOK_TAB_R)
) (TOK_ARG_R)
* (TOK_EL)
low (TOK_VAR)
= (TOK_ASSIGN)
low (TOK_VAR)
+ (TOK_PLUS)
1 (TOK_NUM)
* (TOK_EL)
high (TOK_VAR)
= (TOK_ASSIGN)
high (TOK_VAR)
- (TOK_MINUS)
1 (TOK_NUM)
>- (TOK_ARROW_R)
>- (TOK_ARROW_R)
return (TOK_RETURN)
low (TOK_VAR)
endfunction (TOK_END_FUNC)